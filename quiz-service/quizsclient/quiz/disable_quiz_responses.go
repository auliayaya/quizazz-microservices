// Code generated by go-swagger; DO NOT EDIT.

package quiz

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"quizazz/quiz-service/quizsclient/models"
)

// DisableQuizReader is a Reader for the DisableQuiz structure.
type DisableQuizReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableQuizReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDisableQuizOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDisableQuizDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDisableQuizOK creates a DisableQuizOK with default headers values
func NewDisableQuizOK() *DisableQuizOK {
	return &DisableQuizOK{}
}

/*
DisableQuizOK describes a response with status code 200, with default header values.

A successful response.
*/
type DisableQuizOK struct {
	Payload models.QuizspbDisableQuizResponse
}

// IsSuccess returns true when this disable quiz o k response has a 2xx status code
func (o *DisableQuizOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disable quiz o k response has a 3xx status code
func (o *DisableQuizOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable quiz o k response has a 4xx status code
func (o *DisableQuizOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable quiz o k response has a 5xx status code
func (o *DisableQuizOK) IsServerError() bool {
	return false
}

// IsCode returns true when this disable quiz o k response a status code equal to that given
func (o *DisableQuizOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the disable quiz o k response
func (o *DisableQuizOK) Code() int {
	return 200
}

func (o *DisableQuizOK) Error() string {
	return fmt.Sprintf("[PUT /api/quizs/{id}/disable][%d] disableQuizOK  %+v", 200, o.Payload)
}

func (o *DisableQuizOK) String() string {
	return fmt.Sprintf("[PUT /api/quizs/{id}/disable][%d] disableQuizOK  %+v", 200, o.Payload)
}

func (o *DisableQuizOK) GetPayload() models.QuizspbDisableQuizResponse {
	return o.Payload
}

func (o *DisableQuizOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableQuizDefault creates a DisableQuizDefault with default headers values
func NewDisableQuizDefault(code int) *DisableQuizDefault {
	return &DisableQuizDefault{
		_statusCode: code,
	}
}

/*
DisableQuizDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type DisableQuizDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this disable quiz default response has a 2xx status code
func (o *DisableQuizDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this disable quiz default response has a 3xx status code
func (o *DisableQuizDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this disable quiz default response has a 4xx status code
func (o *DisableQuizDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this disable quiz default response has a 5xx status code
func (o *DisableQuizDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this disable quiz default response a status code equal to that given
func (o *DisableQuizDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the disable quiz default response
func (o *DisableQuizDefault) Code() int {
	return o._statusCode
}

func (o *DisableQuizDefault) Error() string {
	return fmt.Sprintf("[PUT /api/quizs/{id}/disable][%d] DisableQuiz default  %+v", o._statusCode, o.Payload)
}

func (o *DisableQuizDefault) String() string {
	return fmt.Sprintf("[PUT /api/quizs/{id}/disable][%d] DisableQuiz default  %+v", o._statusCode, o.Payload)
}

func (o *DisableQuizDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *DisableQuizDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
